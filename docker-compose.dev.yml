version: '3.8'

services:
  notification_db:
    image: postgres:15.1
    restart: unless-stopped
    container_name: db
    env_file:
      - ./.env
#    user: app
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 5
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  notification_app:
    build: ./app
    restart: unless-stopped
    container_name: django
    env_file:
      - ./.env
    command: /opt/app/run_uwsgi.sh
    ports:
      - "8000:8000"
    depends_on:
      notification_db:
        condition: service_healthy

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.12-rc-management
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    depends_on:
      - notification_app
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    container_name: celery
    build: ./app
    command: celery --app=config worker --loglevel=info
    env_file:
      - ./.env
    depends_on:
      - rabbitmq

  celery-beat:
    container_name: celery-beat
    build: ./app
    command: celery --app=config beat --loglevel=info
    env_file:
      - ./.env
    depends_on:
      - rabbitmq

  flower:
    container_name: flower
    build: ./app
    command: celery --app=config flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - celery
      - rabbitmq

  etl:
    container_name: etl
    build: ./fetch-users
    env_file:
      - "./.env.etl"
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - '27017:27017'

volumes:
  postgres_data: